import { fetch } from 'fetch-h2';
import { encode, decode } from 'msgpack-lite';
{{- $root := . }}
{{- "\n" }}
const client = (host, https = true) => {
    const scheme = https ? "https" : "http";

    return {   
        {{- range $i, $t := $root.Types }}
        create{{ $t.Name | title }}: async () => {
            const url = `${scheme}://${host}/api/v1/rpc/create{{ $t.Name | title }}`;
            const payload = {};

            const response = await fetch(url, {
                method: 'OPTIONS',
                mode: 'cors', // no-cors, *cors, same-origin
                cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
                credentials: 'same-origin', // include, *same-origin, omit
                headers: {
                    'Content-Type': 'application/x-msgpack'
                },
                redirect: 'follow', // manual, *follow, error
                referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url
                body: encode(payload),
            });

            return decode(response.body);
        },
            {{- if $root.EnableUniversalArchiving }}
        archive{{ $t.Name | title }}: (id) => {},
            {{- else }}
        delete{{ $t.Name | title }}: (id) => {},
            {{- end }}
        {{- end }}
    };
};